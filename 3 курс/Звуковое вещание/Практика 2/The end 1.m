clc
clear
close all
pkg load signal

% шрифт и его размер ГОСТ для графиков
set(0, "defaultaxesfontsize", 14)
set(0, "defaultaxesfontname", "Times New Roman")

% Шаг 1: Расчет номера варианта задания m

% а) Запись даты рождения в переменную
birthdate = '2004-11-21';

% б) Преобразование даты рождения в номер даты
date_number = datenum(birthdate);

% в) Нахождение остатка от деления на 50
itog = mod(date_number, 50);

% г) Прибавление 1 к полученному значению
m = itog + 1;

disp(m);

fs = 48000;
Ts = 1/fs;
T = 60;
t = 0:Ts:T-Ts;

% Инициализация сигнала
x = zeros(size(t));

% Формирование 10 синусоидальных составляющих:
for k = 1:10
F(k) = k * ceil(0.95^m * 1000);
A(k) = 1 - 0.5 * log10(k);
xi = A(k) * sin(2 * pi * F(k) * t);
x = x + xi;
end
x = x./max(x);

% Формирование испытательного сигнала
% скользящего тона:
% Начальное значение частоты, Гц:
Fstart = 3*ceil(abs(cos(m) + sin(50 - m))*1000)
% Конечное значение частоты, Гц:
Fend = 20000 - 10*ceil(abs(cos(m) + sin(50 - m))*1000)
% Амплитуда скользящего тона:
Askol = 1;
% Формирование вектора отсчетов сигнала:
xskol = Askol*chirp(t,Fstart,T-Ts,Fend,"quadratic");
% Формирование вектора отсчетов сигнала:
xn = randn(1,length(t));

%Для гармонического сигнала:
for Nwin = [128, 16384];
% Половина длины БПФ:
Nwin2 = Nwin/2;
% Первый и последний отсчеты выборки:
n1 = 1;
n2 = n1 + Nwin - 1;
% Формирование массива амплитудных значений оконной функции
% и выполнение операции транспонирования вектора:
win = hanning(Nwin).';
% Расчет текущего и энергетического спектров звукового сигнала:
% Длительность сигнала в отсчетах:
M = T*fs;
% Целое число выборок L:
L = ceil(M/Nwin);
% Длина новой последовательности:
ML = L*Nwin;
% Новая последовательность отсчетов звукового сигнала:
xL = [x(1:M),zeros(1,ML-M)];
% Задание матрицы для всех последовательных выборок:
SWindowed = [];
% Расчет линейных значений амплитуд мгновенного спектра:
for i = [1:L];
% Применение окна к каждой последовательной выборке:
Lwindowed = xL(Nwin*(i-1)+1:Nwin*i).*win;
% Расчет БПФ для каждой последовательной выборки:
LWindowed = fft(Lwindowed,Nwin);
% Выделение первых N/2 отсчетов из каждой выборки:
LWindowed2 = LWindowed(1:Nwin2);
% Выделение амплитуд спектральных составляющих и
% масштабирование значений АЧХ каждой выборки:
SWin = abs(LWindowed2/Nwin2);
% Формирование матрицы, строки которой соответствуют
% значениям амплитуд мгновенного спектра
% каждой выборки:
SWindowed = [SWindowed;SWin];
endfor
% Расчет текущего спектра как среднего арифметического:
ST = sum(SWindowed)/L;
% Расчет энергетического спектра как среднеквадратичного:
SRMS = sqrt(sum(SWindowed.^2)/L);
% Расчет значений амплитуд спектральных составляющих в dBFS:
STdB = 20*log10(ST);
SRMSdB = 20*log10(SRMS);
% Формирование вектора значений отсчетов частоты:
fspect = [0:fs/Nwin:(Nwin2-1)*fs/Nwin];
% Вывод графиков:
% Мгновенный спектр для момента T/2:
figure("name","Спектр амплитуд (dBFS)","numbertitle","off");
subplot(2,1,1);
plot(fspect,20*log10(SWindowed(ceil(L/2),:)),"r");
ylabel("dBFS");
xlabel("f, Hz");
legend("Мгновенный(f)");
grid on;
% Текущий и энергетический спектры:
subplot(2,1,2);
semilogx([1,fspect(2:Nwin2)],STdB,"y");
hold on;
semilogx([1,fspect(2:Nwin2)],SRMSdB,"k");
ylabel("dBFS");
xlabel("f, Hz");
legend("Текущий(f)","Энергетический(f)");
grid on;
% Расчет и пострение спектрограммы для отрезка
% звукового сигнала в 20 с:
figure("name","Спектограмма сигнала","numbertitle","off");
specgram(x(1:20*48000),Nwin,fs,hanning(Nwin),0);
colormap(jet);
colorbar("EastOutside");
disp("Press space bar to continue");
pause;
endfor


% Для скользящего тона
for Nwin = [128, 16384];
Nwin
% Половина длины БПФ:
Nwin2 = Nwin/2;
% Первый и последний отсчеты выборки:
n1 = 1;
n2 = n1 + Nwin - 1;
% Формирование массива амплитудных значений оконной функции
% и выполнение операции транспонирования вектора:
win = hanning(Nwin).';
% Расчет текущего и энергетического спектров звукового сигнала:
% Длительность сигнала в отсчетах:
M = T*fs;
% Целое число выборок L:
L = ceil(M/Nwin);
% Длина новой последовательности:
ML = L*Nwin;
% Новая последовательность отсчетов звукового сигнала:
xL = [xskol(1:M),zeros(1,ML-M)];
% Задание матрицы для всех последовательных выборок:
SWindowed = [];
% Расчет линейных значений амплитуд мгновенного спектра:
for i = [1:L];
% Применение окна к каждой последовательной выборке:
Lwindowed = xL(Nwin*(i-1)+1:Nwin*i).*win;
% Расчет БПФ для каждой последовательной выборки:
LWindowed = fft(Lwindowed,Nwin);
% Выделение первых N/2 отсчетов из каждой выборки:
LWindowed2 = LWindowed(1:Nwin2);
% Выделение амплитуд спектральных составляющих и
% масштабирование значений АЧХ каждой выборки:
SWin = abs(LWindowed2/Nwin2);
% Формирование матрицы, строки которой соответствуют
% значениям амплитуд мгновенного спектра
% каждой выборки:
SWindowed = [SWindowed;SWin];
endfor
% Расчет текущего спектра как среднего арифметического:
ST = sum(SWindowed)/L;
% Расчет энергетического спектра как среднеквадратичного:
SRMS = sqrt(sum(SWindowed.^2)/L);
% Расчет значений амплитуд спектральных составляющих в dBFS:
STdB = 20*log10(ST);
SRMSdB = 20*log10(SRMS);
% Формирование вектора значений отсчетов частоты:
fspect = [0:fs/Nwin:(Nwin2-1)*fs/Nwin];
% Вывод графиков:
% Мгновенный спектр для момента T/3:
figure("name","Спектр амплитуд (dBFS)","numbertitle","off");
subplot(2,1,1);
plot(fspect,20*log10(SWindowed(ceil(L/3),:)),"r");
ylabel("dBFS");
xlabel("f, Hz");
legend("Мгновенный(f)");
grid on;
% Текущий и энергетический спектры:
subplot(2,1,2);
semilogx([1,fspect(2:Nwin2)],STdB,"y");
hold on;
semilogx([1,fspect(2:Nwin2)],SRMSdB,"k");
ylabel("dBFS");
xlabel("f, Hz");
legend("Текущий(f)","Энергетический(f)");
grid on;
% Расчет и пострение спектрограммы для отрезка
% звукового сигнала в 20 с:
figure("name","Спектограмма сигнала","numbertitle","off");
specgram(xskol(1:960000),Nwin,fs,hanning(Nwin),0);
colormap(jet);
colorbar("EastOutside");
disp("Press space bar to continue");
pause;
endfor


%для белого шума
% Цикл для разных значений длины БПФ Nwin (прямоугольное окно):
for Nwin = [128, 16384];
Nwin
% Половина длины БПФ:
Nwin2 = Nwin/2;
% Первый и последний отсчеты выборки:
n1 = 1;
n2 = n1 + Nwin - 1;
% Формирование массива амплитудных значений оконной функции
% и выполнение операции транспонирования вектора:
win = hanning(Nwin).';
% Расчет текущего и энергетического спектров звукового сигнала:
% Длительность сигнала в отсчетах:
M = T*fs;
% Целое число выборок L:
L = ceil(M/Nwin);
% Длина новой последовательности:
ML = L*Nwin;
% Новая последовательность отсчетов звукового сигнала:
xL = [xn(1:M),zeros(1,ML-M)];
% Задание матрицы для всех последовательных выборок:
SWindowed = [];
% Расчет линейных значений амплитуд мгновенного спектра:
for i = [1:L];
% Применение окна к каждой последовательной выборке:
Lwindowed = xL(Nwin*(i-1)+1:Nwin*i).*win;
% Расчет БПФ для каждой последовательной выборки:
LWindowed = fft(Lwindowed,Nwin);
% Выделение первых N/2 отсчетов из каждой выборки:
LWindowed2 = LWindowed(1:Nwin2);
% Выделение амплитуд спектральных составляющих и
% масштабирование значений АЧХ каждой выборки:
SWin = abs(LWindowed2/Nwin2);
% Формирование матрицы, строки которой соответствуют
% значениям амплитуд мгновенного спектра
% каждой выборки:
SWindowed = [SWindowed;SWin];
endfor
% Расчет текущего спектра как среднего арифметического:
ST = sum(SWindowed)/L;
% Расчет энергетического спектра как среднеквадратичного:
SRMS = sqrt(sum(SWindowed.^2)/L);
% Расчет значений амплитуд спектральных составляющих в dBFS:
STdB = 20*log10(ST);
SRMSdB = 20*log10(SRMS);
% Формирование вектора значений отсчетов частоты:
fspect = [0:fs/Nwin:(Nwin2-1)*fs/Nwin];
% Вывод графиков:
% Мгновенный спектр для момента T/2:
figure("name","Спектр амплитуд (dBFS)","numbertitle","off");
subplot(2,1,1);
plot(fspect,20*log10(SWindowed(ceil(L/2),:)),"r");
ylabel("dBFS");
xlabel("f, Hz");
legend("Мгновенный(f)");
grid on;
% Текущий и энергетический спектры:
subplot(2,1,2);
semilogx([1,fspect(2:Nwin2)],STdB,"y");
hold on;
semilogx([1,fspect(2:Nwin2)],SRMSdB,"k");
ylabel("dBFS");
xlabel("f, Hz");
legend("Текущий(f)","Энергетический(f)");
grid on;
% Расчет и пострение спектрограммы для отрезка
% звукового сигнала в 20 с:
figure("name","Спектрограмма сигнала","numbertitle","off");
specgram(xn(1:960000),Nwin,fs,hanning(Nwin),0);
colormap(jet);
colorbar("EastOutside");
disp("Press space bar to continue");
pause;
endfor




